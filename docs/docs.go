// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-02-08 20:03:07.368005 +0700 +07 m=+0.035846984

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Vulscano API Documentation",
    "description" : "Swagger API documentation for TATA Communications Vulscano.",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "name" : "Vulscano API Support",
      "url" : "https://github.com/lucabrasi83/vulscano",
      "email" : "sebastien.pouplin@tatacommunications.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://vulscano.vsnl.co.in/api/v1",
    "description" : "Production server (uses live data)"
  }, {
    "url" : "https://vulscano.vsnl.co.in:8443/api/v1",
    "description" : "Sandbox server (uses test data)"
  } ],
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "users",
    "description" : "Operations available to regular enterprise users"
  }, {
    "name" : "ping",
    "description" : "API Health Check"
  } ],
  "paths" : {
    "/admin/all-users" : {
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "Get all users provisioned",
        "description" : "Fetch all users details provisioned in application",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VulscanoDBUserMain"
                }
              }
            }
          },
          "400" : {
            "description" : "unable to fetch users"
          },
          "401" : {
            "description" : "user not authorized"
          },
          "404" : {
            "description" : "route requested does not exist"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/admin/on-demand-scan" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "Launch On-Demand Vulnerability Scan",
        "description" : "Perform a vulnerability scan any device NOT part of an inventory",
        "requestBody" : {
          "description" : "Device Details",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdHocScanDevice"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScanResultsMain"
                }
              }
            }
          },
          "400" : {
            "description" : "unable to launch scan"
          },
          "401" : {
            "description" : "user not authorized"
          },
          "404" : {
            "description" : "route requested does not exist"
          },
          "413" : {
            "description" : "body size too large"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/admin/user" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "Create new user",
        "description" : "Create new user to access Vulscano",
        "requestBody" : {
          "description" : "New user details",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VulscanoUserCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "user successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "unable to create requested user"
          },
          "401" : {
            "description" : "user not authorized"
          },
          "404" : {
            "description" : "route requested does not exist"
          },
          "413" : {
            "description" : "body size too large"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/admin/user/{username}" : {
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "Get specific user details",
        "description" : "Fetch user details specified in user-id param",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "Username in email format",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VulscanoDBUser"
                }
              }
            }
          },
          "400" : {
            "description" : "unable to fetch requested user"
          },
          "401" : {
            "description" : "user not authorized"
          },
          "404" : {
            "description" : "route requested does not exist"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "Delete an existing user",
        "description" : "Delete an existing user",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "Username in email format",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "user successfully deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "unable to update requested user"
          },
          "401" : {
            "description" : "user not authorized"
          },
          "404" : {
            "description" : "route requested does not exist"
          },
          "413" : {
            "description" : "body size too large"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "admins" ],
        "summary" : "Update an existing user",
        "description" : "Update an existing user",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "Username in email format",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Existing user details",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VulscanoUserPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "user successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "unable to update requested user"
          },
          "401" : {
            "description" : "user not authorized"
          },
          "404" : {
            "description" : "route requested does not exist"
          },
          "413" : {
            "description" : "body size too large"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/ping" : {
      "get" : {
        "tags" : [ "ping" ],
        "summary" : "Ping API Health Check",
        "description" : "Verify the API is responding to HTTP requests",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PingAPIResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AdHocScanDevice" : {
        "required" : [ "credentialsName", "hostname", "ip", "osType" ],
        "type" : "object",
        "properties" : {
          "credentialsName" : {
            "type" : "string",
            "example" : "MY-TACACS-CREDS"
          },
          "hostname" : {
            "type" : "string",
            "example" : "TCL-IN-MUMBAI-RTR-1"
          },
          "ip" : {
            "type" : "string",
            "example" : "10.1.1.1"
          },
          "osType" : {
            "type" : "string",
            "example" : "IOS-XE"
          },
          "osVersion" : {
            "type" : "string",
            "example" : "16.06.04"
          },
          "sshGateway" : {
            "type" : "string",
            "example" : "UKL78-SSH-GW"
          }
        }
      },
      "PingAPIResponse" : {
        "type" : "object",
        "properties" : {
          "golangRuntime" : {
            "type" : "string",
            "example" : "1.11.5"
          },
          "pong" : {
            "type" : "string",
            "example" : "I'm Alive"
          },
          "version" : {
            "type" : "string",
            "example" : "0.2.1"
          }
        }
      },
      "ScanResultsMain" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "$ref" : "#/components/schemas/ScanResults"
          }
        }
      },
      "ScanResults" : {
        "type" : "object",
        "properties" : {
          "scanDeviceMeanTimeMsec" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 6971
          },
          "scanJobEndTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "scanJobID" : {
            "type" : "string",
            "example" : "OrNeDxMX324EpZ4iQeOkgAnlK2dno8"
          },
          "scanJobStartTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalVulnerabilitiesFound" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 6
          },
          "totalVulnerabilitiesScanned" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 189
          },
          "vulnerabilitiesFoundDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VulnMetadata"
            }
          }
        }
      },
      "VulscanoUserCreate" : {
        "required" : [ "email", "enterpriseID", "password", "role" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "john@vulscano.com"
          },
          "enterpriseID" : {
            "type" : "string",
            "example" : "TCL"
          },
          "password" : {
            "type" : "string",
            "example" : "!Mp0$$ible_2_ReMemBeR"
          },
          "role" : {
            "type" : "string",
            "example" : "vulscanouser"
          }
        }
      },
      "VulscanoUserPatch" : {
        "type" : "object",
        "properties" : {
          "enterpriseID" : {
            "type" : "string",
            "example" : "TCL"
          },
          "password" : {
            "type" : "string",
            "example" : "!Mp0$$ible_2_ReMemBeR"
          },
          "role" : {
            "type" : "string",
            "example" : "vulscanouser"
          }
        }
      },
      "VulnMetadata" : {
        "type" : "object",
        "properties" : {
          "advisoryId" : {
            "type" : "string",
            "example" : "cisco-sa-20180926-pnp-memleak"
          },
          "advisoryTitle" : {
            "type" : "string",
            "example" : "Cisco IOS and IOS XE Software Plug and Play Agent Memory Leak Vulnerability"
          },
          "bugIDs" : {
            "type" : "array",
            "example" : [ "CSCvi30136" ],
            "items" : {
              "type" : "string"
            }
          },
          "cves" : {
            "type" : "array",
            "example" : [ "CVE-2018-15377" ],
            "items" : {
              "type" : "string"
            }
          },
          "cvssBaseScore" : {
            "type" : "string",
            "example" : "6.8"
          },
          "firstFixed" : {
            "type" : "array",
            "example" : [ "16.6.7" ],
            "items" : {
              "type" : "string"
            }
          },
          "firstPublished" : {
            "type" : "string",
            "format" : "date-time"
          },
          "publicationUrl" : {
            "type" : "string",
            "example" : "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20180926-pnp-memleak"
          },
          "sir" : {
            "type" : "string",
            "example" : "Medium"
          }
        }
      },
      "VulscanoDBUserMain" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VulscanoDBUser"
            }
          }
        }
      },
      "VulscanoDBUser" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "format" : "email",
            "example" : "john@vulscano.com"
          },
          "enterpriseID" : {
            "type" : "string",
            "example" : "TCL"
          },
          "role" : {
            "type" : "string",
            "example" : "vulscanouser"
          },
          "userID" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "1bf3f4e6-5da2-4f82-87e4-606d5bf05d38"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
